name: Rust

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always


jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: rustup target add ${{ matrix.target }}

      - name: Install Dependencies (Windows)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt update && sudo apt install -y mingw-w64

      - name: Build Binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Rename Binary
        run: |
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-gnu" ]]; then
            mv target/${{ matrix.target }}/release/summarizer summarizer
          else
            mv target/${{ matrix.target }}/release/summarizer.exe summarizer.exe
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            summarizer
            summarizer-windows.exe

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/* # Upload all binaries
          token: ${{ secrets.GITHUB_TOKEN }}
